name: vbank

services:
  postgres:
    image: bitnami/postgresql:17.4.0
    container_name: postgres
    environment:
      POSTGRESQL_USERNAME: admin
      POSTGRESQL_PASSWORD: cantremember
      POSTGRES_DB: vbank
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 3s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis/redis-stack:6.2.6-v19
    container_name: redis
    environment:
      REDIS_ARGS: "--requirepass cantremember"
    ports:
      - "6379:6379"
      - "8001:8001"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    volumes:
      - redis_data:/data

  kafka:
    image: bitnami/kafka:3.9.0
    container_name: kafka
    ports:
      - "9094:9094"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_KRAFT_CLUSTER_ID=CLUSTER_ID_1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "test $(kafka-topics.sh --bootstrap-server localhost:9092 --list | wc -l) -ge 4",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./kafka-init.sh:/docker-entrypoint-initdb.d/kafka-init.sh

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=localCluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka

  vbank-api-gateway:
    image: vbank/api-gateway:latest
    build:
      context: .
      dockerfile: services/api-gateway/Dockerfile
    container_name: api-gateway
    ports:
      - "3000:3000"
    env_file:
      - services/api-gateway/.env.production
    environment:
      - NODE_ENV=test
    depends_on:
      redis:
        condition: service_healthy

  vbank-auth-service:
    image: vbank/auth-service:latest
    build:
      context: .
      dockerfile: services/auth-service/Dockerfile
    container_name: auth-service
    ports:
      - "3001:3000"
    env_file:
      - services/auth-service/.env.production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
      vbank-api-gateway:
        condition: service_started

  vbank-account-service:
    image: vbank/account-service:latest
    build:
      context: .
      dockerfile: services/account-service/Dockerfile
    container_name: account-service
    ports:
      - "3002:3000"
    env_file:
      - services/account-service/.env.production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
      vbank-api-gateway:
        condition: service_started

  vbank-transaction-service:
    image: vbank/transaction-service:latest
    build:
      context: .
      dockerfile: services/transaction-service/Dockerfile
    container_name: transaction-service
    ports:
      - "3003:3000"
    env_file:
      - services/transaction-service/.env.production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
      vbank-api-gateway:
        condition: service_started

  mock-central-bank-service:
    image: vbank/mock-central-bank-service:latest
    build:
      context: .
      dockerfile: services/mock-central-bank-service/Dockerfile
    container_name: mock-central-bank-service
    env_file:
      - services/mock-central-bank-service/.env.production
    ports:
      - "5010:3000"

volumes:
  redis_data:
  postgres_data:
